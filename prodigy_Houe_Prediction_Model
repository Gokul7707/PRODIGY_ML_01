import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

df = pd.read_csv('train.csv')

df = df[['GrLivArea', 'BedroomAbvGr', 'FullBath', 'SalePrice']]
df = df.dropna()

X = df[['GrLivArea', 'BedroomAbvGr', 'FullBath']]
y = df['SalePrice']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = LinearRegression()
model.fit(X_train, y_train)

y_pred = model.predict(X_test)

mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f"Mean Squared Error: {mse}")
print(f"R-squared: {r2}")

plt.figure(figsize=(10, 6))
plt.scatter(y_test, y_pred, color='#FF8800', edgecolor='#FFFFFF', alpha=0.8, label='Predicted Prices')
plt.plot([y_test.min(), y_test.max()], [y_test.min(), y_test.max()], color='#FFEE58', linewidth=3, linestyle='--', label='Perfect Fit Line')

plt.title('PRODIGY HOUSE PREDICTION MODEL', fontsize=20, color='#FFA726', fontweight='bold')
plt.xlabel('Actual Prices', fontsize=14, color='#FFFFFF', labelpad=10)
plt.ylabel('Predicted Prices', fontsize=14, color='#FFFFFF', labelpad=10)
plt.legend(loc='upper left', fontsize=12)
plt.grid(True, linestyle='--', color='#FFF59D', alpha=0.6)
plt.gca().set_facecolor('#212121')
plt.show()
